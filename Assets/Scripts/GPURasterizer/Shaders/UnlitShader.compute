#pragma kernel VertexTransform
#pragma kernel WireFrameTriangle
#pragma kernel RasterizeTriangle
#pragma kernel RasterizeTriangleMSAA
#pragma kernel Resolve

#include "../Libs/Input.hlsl"
#include "../Libs/Common.hlsl"
#pragma enable_d3d11_debug_symbols

float4 _BaseColor;

// ================================ 顶点着色器 ================================
VertexOutput UnlitVertex(Vertex input)
{
    VertexOutput output = (VertexOutput)0;

    output.positionCS = TransformObjectToHClip(input.position);
    output.positionOS = float4(input.position, 1);
    float3 normalWS = TransformObjectToWorldNormal(input.normal);
    output.normalWS = float4(normalWS, 1);
    output.tangent = input.tangent;
    output.uv = input.uv;
    output.color = input.color;

    return output;
}

// ================================ 片元着色器 ================================
float4 FragmentShader(VertexOutput input, out bool isDiscard)
{
    isDiscard = false;

    return half4(input.uv.xy,0, 1);
    return _BaseColor;
}


// ================================  ================================
#define vertex UnlitVertex
#define fragment FragmentShader

#include "../Libs/ColorComputeShader.hlsl"
